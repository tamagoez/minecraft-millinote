# This is a basic workflow to help you get started with Actions

name: Replace Tag & Push

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Status
        run: |
          ls -XlR
          sha1sum ./ |sed 's/\s\s*\/.*$//g' > hash.txt
      - name: Delete all mdx files
        run: |
          rm -fv ./pages/*.mdx
      - name: Replace slug
        run: |
          mkdir arrange
          cp -fvr ./documents/* ./arrange/
      - name: Copy all mdx files
        run: |
          cp -fpvr ./arrange/* ./pages/
      - name: Delete
        run: rm -rf ./arrange
      - name: Hash Check
        run: |
          CURRENT_CACHE=`cat ./hash.txt`
          rm -f ./hash.txt
          NOW_CACHE=`sha1sum ./ |sed 's/\s\s*\/.*$//g'`
          if [ CURRENT_CACHE != NOW_CACHE ]; then
            echo "true" > pushcheck.txt
          else
            echo "false" > pushcheck.txt
            echo "::set-output name=skip_ci::true"
          fi
      - name: Push
        continue-on-error: true
        run: |
          PUSH_CHECK=`cat pushcheck.txt`
          rm -f pushcheck.txt
          if [ PUSH_CHECK = "true" ]; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git pull
            git add -A
            git commit -m "Push replaced pages"
            git push
          else
            echo "Ignore push"
          fi
